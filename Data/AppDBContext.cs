// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SMIXKTBConvenienceCheque.Models;

namespace SMIXKTBConvenienceCheque.Data
{
    public partial class AppDBContext : DbContext
    {
        public AppDBContext()
        {
        }

        public AppDBContext(DbContextOptions<AppDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BatchControl> BatchControls { get; set; }
        public virtual DbSet<BatchDetail> BatchDetails { get; set; }
        public virtual DbSet<BatchFileNo> BatchFileNos { get; set; }
        public virtual DbSet<BatchHeader> BatchHeaders { get; set; }
        public virtual DbSet<BatchOutPutDetail> BatchOutPutDetails { get; set; }
        public virtual DbSet<BatchOutPutHeader> BatchOutPutHeaders { get; set; }
        public virtual DbSet<ChequeDetail> ChequeDetails { get; set; }
        public virtual DbSet<TmpImportClaim> TmpImportClaims { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Thai_100_CI_AI");

            modelBuilder.Entity<BatchDetail>(entity =>
            {
                entity.Property(e => e.AccountPayeeOnlyFlag).IsFixedLength();

                entity.Property(e => e.AcknowledgementDocumentNotify).IsFixedLength();

                entity.Property(e => e.BatchNo)
                    .IsFixedLength()
                    .HasComment("ref เชื่อม Header กับ Trailer ");

                entity.Property(e => e.CarriageReturn).IsFixedLength();

                entity.Property(e => e.ChequeNumber).IsFixedLength();

                entity.Property(e => e.ChequeStatus).IsFixedLength();

                entity.Property(e => e.ChequeStatusDate).IsFixedLength();

                entity.Property(e => e.DateReturnChequeToCompany)
                    .IsFixedLength()
                    .HasComment("วันที่ธนาคารจะเก็บรักษาตัวเช็คไว้ ");

                entity.Property(e => e.DeliveryMethod).IsFixedLength();

                entity.Property(e => e.EffectiveDate)
                    .IsFixedLength()
                    .HasComment("วันที่บนหน้าเช็ค");

                entity.Property(e => e.EmailAddress).IsFixedLength();

                entity.Property(e => e.EndOfLine).IsFixedLength();

                entity.Property(e => e.FaxNumber)
                    .IsFixedLength()
                    .HasComment("หมายเลขโทรสารของผู้รับเช้ค");

                entity.Property(e => e.FileBatchNoBankReference)
                    .IsFixedLength()
                    .HasComment("หมายเลขชุดข้อมูลที่ระบบงาน สร้างขึ้นเพื่อลงทะเบียนรับข้อมูลเข้าระบบ (ธนาคารใช้)");

                entity.Property(e => e.Filler).IsFixedLength();

                entity.Property(e => e.ForKTBSystem).IsFixedLength();

                entity.Property(e => e.FreeFiller).IsFixedLength();

                entity.Property(e => e.InvoiceAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินรวมของ Invoice");

                entity.Property(e => e.KTBRef).IsFixedLength();

                entity.Property(e => e.MobileNumber).IsFixedLength();

                entity.Property(e => e.NetChequeTransferAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินสุทธิที่ต้องการให้พิมพ์บนเช็ค โดยทั่;ไปมีค่าเท่ากับ net invoice amount");

                entity.Property(e => e.NotificationMethod).IsFixedLength();

                entity.Property(e => e.PayType)
                    .IsFixedLength()
                    .HasComment("C = Cashier’s Cheque");

                entity.Property(e => e.PayeeAddress1)
                    .IsFixedLength()
                    .HasComment("ที่อยู่ผู้รับเงิน ( ถ้าไม่มีข้อมูลให้ใส่ - )");

                entity.Property(e => e.PayeeAddress2)
                    .IsFixedLength()
                    .HasComment("ที่อยู่ผู้รับเงิน ( ถ้าไม่มีข้อมูลให้ใส่ - )");

                entity.Property(e => e.PayeeAddress3)
                    .IsFixedLength()
                    .HasComment("ที่อยู่ผู้รับเงิน");

                entity.Property(e => e.PayeeBankAccountNo)
                    .IsFixedLength()
                    .HasComment("หมายเลขบัญชีเงินฝากธนาคารของผู้รับเงิน");

                entity.Property(e => e.PayeeBankCode)
                    .IsFixedLength()
                    .HasComment("รหัสธนาคารของผู้รับเงิน");

                entity.Property(e => e.PayeeIdCardNo)
                    .IsFixedLength()
                    .HasComment("เอกสารแสดงตนของ Beneficiary");

                entity.Property(e => e.PayeeName)
                    .IsFixedLength()
                    .HasComment("Beneficiary Name ใช้พิมพ์บนหน้าเช็ค");

                entity.Property(e => e.PayerAbbreviation)
                    .IsFixedLength()
                    .HasComment("ชื่อย่อบริษัท  หรือ  Company Code");

                entity.Property(e => e.PayerAccountNo)
                    .IsFixedLength()
                    .HasComment("หมายเลขบัญชีของบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.PayerAddress1)
                    .IsFixedLength()
                    .HasComment("ที่อยู่ผู้ชำระเงิน 1");

                entity.Property(e => e.PayerAddress2)
                    .IsFixedLength()
                    .HasComment("ที่อยู่ผู้ชำระเงิน 2");

                entity.Property(e => e.PayerAddress3)
                    .IsFixedLength()
                    .HasComment("ที่อยู่ผู้ชำระเงิน 3");

                entity.Property(e => e.PayerName)
                    .IsFixedLength()
                    .HasComment("ชื่อบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.PayerSocialSecurity)
                    .IsFixedLength()
                    .HasComment("หมายเลขประกันสังคมของบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.PayerTaxID)
                    .IsFixedLength()
                    .HasComment("หมายเลขประจำตัวผู้เสียภาษีของบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.PaymentRefNo1)
                    .IsFixedLength()
                    .HasComment("รหัสอ้างอิงในการชำระเงินใช้เชื่อมความสัมพันธ์ของข้อมูลในแต่ละ Record Type เข้าด้วยกัน");

                entity.Property(e => e.PaymentRefNo2)
                    .IsFixedLength()
                    .HasComment("เลขที่อ้างอิงในการจ่ายเงิน 2");

                entity.Property(e => e.PaymentRefNo3)
                    .IsFixedLength()
                    .HasComment("เลขที่อ้างอิงในการจ่ายเงิน 3");

                entity.Property(e => e.PickUpChequeLocation)
                    .IsFixedLength()
                    .HasComment("สถานที่พิมพ์เช็ค / รับเช็ค ใส่รหัสสาขา หรือรหัสศูนย์เช็ค");

                entity.Property(e => e.PostCode)
                    .IsFixedLength()
                    .HasComment("รหัสไปรษณีย์");

                entity.Property(e => e.PrintLocation)
                    .IsFixedLength()
                    .HasComment("สถานที่จัดพิมพ์เช็ค ธนาคารจเป็นผู้กำหนด");

                entity.Property(e => e.RecordType).IsFixedLength();

                entity.Property(e => e.ReturnChequeMethod)
                    .IsFixedLength()
                    .HasComment("วิธีการดำเนินการเมื่อถึงวัน Date Return Cheque to Company");

                entity.Property(e => e.StrikethroughFlag).IsFixedLength();

                entity.Property(e => e.SupplierRefNo)
                    .IsFixedLength()
                    .HasComment("รหัสอ้างอิงของ Supplier เพื่อใช้จัดกลุ่มข้อมูลกรณีรับเช็คมากกว่า 1 ฉบับ");

                entity.Property(e => e.TotalDiscountAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินรวมของส่วนลดการค้า");

                entity.Property(e => e.TotalInvoiceNetAmount).IsFixedLength();

                entity.Property(e => e.TotalInvoiceRecord).IsFixedLength();

                entity.Property(e => e.TotalMailRecord).IsFixedLength();

                entity.Property(e => e.TotalPaymentAmount).IsFixedLength();

                entity.Property(e => e.TotalPaymentRecord).IsFixedLength();

                entity.Property(e => e.TotalTaxableAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินรวมที่ใช้ในการคำนวณภาษีหัก ณ ที่จ่ายต่อเช็ค 1 ฉบับ");

                entity.Property(e => e.TotalVATAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินรวมของ Invoice");

                entity.Property(e => e.TotalWHTAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินรวมของภาษีหัก ณ ที่จ่ายของ");

                entity.Property(e => e.TotalWHTRecord).IsFixedLength();

                entity.Property(e => e.VATPercent)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินภาษีมูลค่าเพิ่ม");

                entity.HasOne(d => d.BatchFileNo)
                    .WithMany(p => p.BatchDetails)
                    .HasForeignKey(d => d.BatchFileNoId)
                    .HasConstraintName("FK_BatchDetail_BatchFileNo");
            });

            modelBuilder.Entity<BatchFileNo>(entity =>
            {
                entity.HasOne(d => d.BatchControl)
                    .WithMany(p => p.BatchFileNos)
                    .HasForeignKey(d => d.BatchControlId)
                    .HasConstraintName("FK_BatchFileNo_BatchControl");
            });

            modelBuilder.Entity<BatchHeader>(entity =>
            {
                entity.HasOne(d => d.BatchFileNo)
                    .WithMany(p => p.BatchHeaders)
                    .HasForeignKey(d => d.BatchFileNoId)
                    .HasConstraintName("FK_BatchHeader_BatchFileNo");
            });

            modelBuilder.Entity<BatchOutPutDetail>(entity =>
            {
                entity.Property(e => e.Address1)
                    .IsFixedLength()
                    .HasComment("ที่อยู่บริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.Address2)
                    .IsFixedLength()
                    .HasComment("ที่อยู่บริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.Address3)
                    .IsFixedLength()
                    .HasComment("ที่อยู่บริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.ChequeEffectiveDate)
                    .IsFixedLength()
                    .HasComment("วันทีพิมพ์บนหน้าเช็ค");

                entity.Property(e => e.ChequeNumber)
                    .IsFixedLength()
                    .HasComment("หมายเลขเช็ค");

                entity.Property(e => e.ChequeStatus)
                    .IsFixedLength()
                    .HasComment("สถานะของเช็ค\r\nI :   Issue  ออกเช็คแล้ว\r\nD :   Deliver  รับเช็คแล้ว\r\nP :   Paid  เช็คเรียกเก็บแล้ว\r\nR :   Return ส่งเช็คคืนบริษัท\r\nS :   Stop  อายัดเช็ค\r\nC :   Canceled  ยกเลิกเช็ค\r\n");

                entity.Property(e => e.CompanyAbbreviation)
                    .IsFixedLength()
                    .HasComment("ชื่อย่อบริษัท");

                entity.Property(e => e.CompanyName)
                    .IsFixedLength()
                    .HasComment("ชื่อบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.NetCheque)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินจ่ายสุทธิ (ตามเช็ค)");

                entity.Property(e => e.OutwardDate)
                    .IsFixedLength()
                    .HasComment("วันทีพิมพ์เช็ค");

                entity.Property(e => e.PayeeAccountNumber)
                    .IsFixedLength()
                    .HasComment("หมายเลขบัญชีที่ตัดจ่ายเช็ค");

                entity.Property(e => e.PayeeName)
                    .IsFixedLength()
                    .HasComment("ชื่อผู้รับเช็ค");

                entity.Property(e => e.PayeeTaxIdNumber)
                    .IsFixedLength()
                    .HasComment("เลขประจำตัวผู้เสียภาษีของบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.PaymentRefNo1)
                    .IsFixedLength()
                    .HasComment("รหัสอ้างอิงการชำระเงินที่บริษัทส่งมา");

                entity.Property(e => e.RecordType).IsFixedLength();

                entity.Property(e => e.Sequence)
                    .IsFixedLength()
                    .HasComment("ลำดับที่ของรายการที่มีการเปลี่ยนแปลงสถานะ");

                entity.Property(e => e.SocialSecurityId)
                    .IsFixedLength()
                    .HasComment("เลขประกันสังคมของบริษัทผู้สั่งจ่ายเช็ค");

                entity.Property(e => e.TotalRecords)
                    .IsFixedLength()
                    .HasComment("จำนวนเช็คทั้งหมดที่มีการเปลี่ยนแปลง");

                entity.Property(e => e.TransactionDate)
                    .IsFixedLength()
                    .HasComment("วันที่สถานะเช็คเปลี่ยนแปลง");

                entity.Property(e => e.WithholdingTaxAmount)
                    .IsFixedLength()
                    .HasComment("จำนวนเงินหักภาษี ณ ที่จ่าย");

                entity.HasOne(d => d.BatchOutPutHeader)
                    .WithMany(p => p.BatchOutPutDetails)
                    .HasForeignKey(d => d.BatchOutPutHeaderId)
                    .HasConstraintName("FK_BatchOutPutDetail_BatchOutPutHeader");
            });

            modelBuilder.Entity<ChequeDetail>(entity =>
            {
                entity.Property(e => e.ChequeEffectiveDate).HasComment("วันทีพิมพ์บนหน้าเช็ค");

                entity.Property(e => e.ChequeNumber).HasComment("หมายเลขเช็ค");

                entity.Property(e => e.ChequeStatus).HasComment("สถานะของเช็ค \r\nI :   Issue  ออกเช็คแล้ว \r\nD :   Deliver  รับเช็คแล้ว \r\nP :   Paid  เช็คเรียกเก็บแล้ว \r\nR :   Return ส่งเช็คคืนบริษัท \r\nS :   Stop  อายัดเช็ค \r\nC :   Canceled  ยกเลิกเช็ค");

                entity.Property(e => e.NetCheque).HasComment("จำนวนเงินจ่ายสุทธิ (ตามเช็ค)");

                entity.Property(e => e.OutwardDate).HasComment("วันทีพิมพ์เช็ค");

                entity.Property(e => e.PayeeName).HasComment("ชื่อผู้รับเช็ค");

                entity.Property(e => e.TransactionDate).HasComment("วันที่สถานะเช็คเปลี่ยนแปลง");

                entity.Property(e => e.WithholdingTaxAmount).HasComment("จำนวนเงินหักภาษี ณ ที่จ่าย");

                entity.HasOne(d => d.BatchControl)
                    .WithMany(p => p.ChequeDetails)
                    .HasForeignKey(d => d.BatchControlId)
                    .HasConstraintName("FK_ChequeDetail_BatchControl");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}